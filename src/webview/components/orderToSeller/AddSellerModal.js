// salesenquiries@csquare.in
import React,{useState} from 'react'
import { Modal } from '@material-ui/core'
import Fade from "@material-ui/core/Fade";
import Backdrop from "@material-ui/core/Backdrop";
import CrossImg from "../../../assets/images/cross-grey.svg";
import Grid from "@material-ui/core/Grid";
import Tooltip from '@material-ui/core/Tooltip';
import TextField from "@material-ui/core/TextField";
import InputAdornment from "@material-ui/core/InputAdornment";
import { MenuItem } from "@material-ui/core";
import { toTitleCase } from '../../../util/Helper';

import Shop from "../../../assets/images/icons/shop.svg";
import User from "../../../assets/images/icons/user.svg";
import Phone from "../../../assets/images/icons/smartphone.svg";
import Licence from "../../../assets/images/icons/licence.svg";

import Calendar from "../../../assets/images/calendar.svg";
import GstType from "../../../assets/images/gst.svg";
import Gst from "../../../assets/images/icons/gst.svg";
import Address from "../../../assets/images/address.svg";
import ZipCode from "../../../assets/images/icons/zip-code.svg";
import State from "../../../assets/images/icons/state.svg";
import City from "../../../assets/images/icons/city.svg";
import Area from "../../../assets/images/icons/area.svg";
import Landmark from "../../../assets/images/landmark.svg";
import SuccessImg from "../../../assets/images/icons/payment-success.svg";

import Button from "@material-ui/core/Button";
import "date-fns";
import DateFnsUtils from "@date-io/date-fns";
import { DatePicker, MuiPickersUtilsProvider } from "@material-ui/pickers";


const AddSellerModal=(props)=>{ 

	const {open, handleClose,sellerName,getProfileInfo,getProfileInfoResult,getSellerInfoResult,ScheduleDemoEmailAction,
		scheduleDemoEmailResult} = props;
	console.log(getProfileInfoResult,"<<<<< getProfileInfoResult")

	const [respModalOpen, setRespModalOpen] = useState(false);
	const [successMsg, setSuccessMsg] = useState("");
	const [errMsg, setErrMsg] = useState("");	

	const handleCloseRespModal = () => {
		setRespModalOpen(false);
		handleClose();
		setErrMsg("");
		setSuccessMsg("");
	};

	const handleSubmit = ()=>{
		setRespModalOpen(true);
		// handleClose(true);
		// liveorder@c2info.com
		const emailBody={
			"to": {
					"c_to": [
							"lo.dhilip@c2info.com"
					],
					"c_to_cc": [],
					"c_to_bcc": []
			},
			"c_subject": "Live Order-Add Buyer request (New)",
			"c_content": `
			<h1>You have received a new inquiry from  ${getSellerInfoResult.payload.c_seller_name} with the following information: </h1>


			Store Name: <b>${getProfileInfoResult.payload.c_name}</b><br>
			Owner Name: <b>${getProfileInfoResult.payload.c_name}</b><br>
			Email ID: <b>${getProfileInfoResult.payload.c_name}</b><br>
			Phone : <b>${getProfileInfoResult.payload.c_name}</b><br>
			City: <b>${getProfileInfoResult.payload.c_name}</b><br><br>
			
			<h4>Please create Buyer in customer master and activate the buyer after your verification process to start transacting. Send confirmation communication to the buyers email ID:(Customer ID)</h4><br><br>
			`,
			"attachMents": []
	}

	// Email ID : <b>${getSellerInfoResult.payload.c_email}</b><br></br>
	const emailBody1={
		"to": {
				"c_to": [
						"liveorder@c2info.com"
				],
				"c_to_cc": [],
				"c_to_bcc": []
		},
		"c_subject": "Live Order- Add UN-Mapped Seller Request",
		"c_content": `
		<h1>A new request to Add UN-Mapped seller has been generated with the following information: </h1>


		Seller Name: <b>${getSellerInfoResult.payload.c_seller_name}</b><br>
		Seller Code: <b>${getSellerInfoResult.payload.c_seller_code}</b><br>
		Owner Name: <b>${getSellerInfoResult.payload.c_contact_person_name}</b><br>
		Email ID : <b></b><br>
		Phone: <b>${getSellerInfoResult.payload.c_mobile_no}</b><br>
		State: <b>${getSellerInfoResult.payload.c_state_name}</b><br>
		City: <b>${getSellerInfoResult.payload.c_city_name}</b><br><br>
		
		<h4>The request to map the UN-Mapped seller has been generated by the buyer with the following information:</h4><br><br>

		Store Name: <b>${getProfileInfoResult.payload.c_name}</b><br>
		Owner Name: <b>${getProfileInfoResult.payload.c_firm_contact_person}</b><br>
		Email ID: <b>${getProfileInfoResult.payload.c_email}</b><br>
		Phone : <b>${getProfileInfoResult.payload.c_mobile_no}</b><br>
		City: <b>${getProfileInfoResult.payload.c_city_name}</b><br><br>

		<h4>Kindly get in touch with the seller to activate the buyer after the verification process to start transacting. :</h4><br><br>

		<h3>Thanks & Regards</h3>
		<h3>Team C-Square</h3>
		`,
		"attachMents": []
}

		ScheduleDemoEmailAction(emailBody1);






	}
	const handleInputChange=(event, role, index)=>{
		
	}
	const handleBlur=(e)=>{

	}
	
	const handleDrugExpiryDate=(date)=>{

	}

   
	return(
		<div>
			<Modal 
			aria-labelledby="transition-modal-title"
			aria-describedby="transition-modal-description"
			className="roadblock-popup"
			open={open}
			onClose={handleClose}
			closeAfterTransition
			BackdropComponent={Backdrop}
			BackdropProps={{
			timeout: 500
			}}
			>
				<Fade in={open}>
					<div className="addSeller-popup">
						<Tooltip title="Close">
							<div className="align-right closeImg">
								<img src={CrossImg} alt="cross-img" onClick={handleClose} />
							</div>
						</Tooltip>
						{/* <div className="center">
							<img src={imgUrl} alt="licence" className="viewImage" />
						</div> */}
						<div>
							<div className="sellerHeading">
								Send Request To 
								{
									(getSellerInfoResult.payload.c_seller_name) ?  ' '+toTitleCase(getSellerInfoResult.payload.c_seller_name): ''
								}
							</div>
								
								<form className="sellerprofile">
									<div className="">
										<h4 className="profile-subtitle">Store Info</h4>
									</div>
									<Grid container spacing={0}>
										<Grid item xs={4}>
											<div className="mr-16">
												<TextField
												name="c_name"
												disabled={true}
												// value={getSellerInfoResult.payload.c_seller_name}
												value={getProfileInfoResult.payload.c_name}
												
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="Store name"
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={Shop} alt="Shop" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>
										<Grid item xs={4}>
											<div className="mr-16">
												<TextField
												name="c_firm_contact_person"
												disabled={true}
												value={getProfileInfoResult.payload.c_firm_contact_person}
												
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="Full name"
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={User} alt="User" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>
										<Grid item xs={4}>
											<div className="mr-16">
												<TextField
												name="c_mobile_no"
												disabled={true}
												value={getProfileInfoResult.payload.c_mobile_no}
												
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="Phone "
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={Phone} alt="Phone no." />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>
									</Grid>
									<div className="">
										<h4 className="profile-subtitle">Firm legal Identities</h4>
									</div>
									<Grid container spacing={0}>
										<Grid item xs={4}>
											<div className="mr-16 mr-b-20">
												<TextField
												disabled={true}
												name="c_druglicense_no1"
												value={getProfileInfoResult.payload.c_druglicense_no1}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="DrugLicense No"
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={Licence} alt="Licence No" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>
										{/* <Grid item xs={4}>
											<div className="mr-16">
												<TextField
												disabled={true}
												name="c_drug_license_no1_expiry_date"
												value={getSellerInfoResult.payload.c_drug_license_no_expiry_date}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="Date *"
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={calendar} alt="drug lic" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid> */}
										<Grid item xs={4}>
											<div className="mr-16 mr-b-20">
												<MuiPickersUtilsProvider utils={DateFnsUtils}>
												<DatePicker
													disabled={true}
													name="c_drug_license_no1_expiry_date"
													className="auth-input"
													onChange={handleDrugExpiryDate}
													// value={getProfileInfoResult.payload.c_drug_license_no1_expiry_date}
													value="1900-01-01 00:00:00.0"
													inputVariant="outlined"
													margin="normal"
													format="yyyy-MM-dd"
													placeholder="Valid Till *"
													// minDate={new Date()}
													InputProps={{
													startAdornment: (
														<InputAdornment position="start">
														<img src={Calendar} alt="Calendar" />
														</InputAdornment>
													)
													}}
												/>
												</MuiPickersUtilsProvider>

											</div>
										</Grid>
										<Grid item xs={4}>
											<div className="mr-16 mr-b-20">
												<TextField
												disabled={true}
												name="c_gst_type"
												value={getProfileInfoResult.payload.c_gst_type}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="GST type "
												className="toCatp auth-input"
												
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={GstType} alt="gst" />
													</InputAdornment>
													)
												}}
												>
												{/* <MenuItem value={-1}>GST Type </MenuItem> */}
												{/* {(gstListResult.payload as Array<any>).map((item: GSTEntity) => (
													<MenuItem className="toCatp" key={item.n_id} value={item.n_id} >{item.c_gst_type.toLowerCase()}</MenuItem>
												))} */}
												</TextField>
											</div>
										</Grid>
										<Grid item xs={4}>
											<div className="mr-16">
												<TextField
												disabled={true}
												name="c_gst_num"
												value={getProfileInfoResult.payload.c_gst_no}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="GSTIN Number "
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={Gst} alt="gst" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>
									</Grid>
									<div className="">
										<h4 className="profile-subtitle">Address</h4>
									</div>
									<Grid container spacing={0}>
										<Grid item xs={6}>
											<div className="mr-16 mr-b-20">
												<TextField
												disabled={true}
												name="c_address_1"
												value={getProfileInfoResult.payload.c_firm_address1}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="Address Line 1"
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={Address} alt="Address" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>
										<Grid item xs={6}>
											<div className="mr-16 mr-b-20">
												<TextField
												disabled={true}
												name="c_address_2"
												value={getProfileInfoResult.payload.c_firm_address2}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="Address Line 2"
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={Address} alt="Address" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>
										<Grid item xs={4}>
										<div className="mr-16 mr-b-20">
												<TextField
												disabled={true}
												name="pincode"
												value={getProfileInfoResult.payload.c_pincode}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="Pincode *"
												className="toCatp auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={ZipCode} alt="Zip Code" />
													</InputAdornment>
													)
												}}
												>
												{/* <MenuItem value={-1}>Gst Type *</MenuItem> */}
												{/* {(gstListResult.payload as Array<any>).map((item: GSTEntity) => (
													<MenuItem className="toCatp" key={item.n_id} value={item.n_id} >{item.c_gst_type.toLowerCase()}</MenuItem>
												))} */}
												</TextField>
											</div>
										</Grid>
										<Grid item xs={4}>
											<div className="mr-16 mr-b-20">
												<TextField
												disabled={true}
												name="c_state_name"
												value={getProfileInfoResult.payload.c_state_name}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="State "
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={State} alt="State" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>

										<Grid item xs={4}>
											<div className="mr-16 mr-b-20">
												<TextField
												disabled={true}
												name="c_city_name"
												value={getProfileInfoResult.payload.c_city_name}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="City "
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={City} alt="City" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>

										<Grid item xs={4}>
											<div className="mr-16 mr-b-32">
												<TextField
												disabled={true}
												name="c_area_name"
												value={getProfileInfoResult.payload.c_area_name}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="Area "
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={Area} alt="Area" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>

										<Grid item xs={4}>
											<div className="mr-16 mr-b-32">
												<TextField
												disabled={true}
												name="c_landmark"
												value={getProfileInfoResult.payload.c_landmark}
												autoComplete="new-password"
												margin="normal"
												variant="outlined"
												placeholder="Landmark "
												className="auth-input"
												InputProps={{
													startAdornment: (
													<InputAdornment position="start">
														<img src={Landmark} alt="Landmark" />
													</InputAdornment>
													)
												}}
												/>
											</div>
										</Grid>
										
									</Grid>
									<div>
										<Button
											variant="contained"
											color="primary"
											className="feedback-send-btn"
											component="span"
											onClick={handleSubmit}
											// disabled={addBranchResult.loading}
										> 
										{/* {addBranchResult.loading ? <CircularProgress className="spining-icon" /> : null}{" "} */}
										SEND 
										</Button>
									</div>
								</form>
							   
						</div>
					</div>
				</Fade>
			</Modal>

			{/* <Modal
				aria-labelledby="transition-modal-title"
				aria-describedby="transition-modal-description"
				className="roadblock-popup"
				open={respModalOpen}
				onClose={handleCloseRespModal}
				closeAfterTransition
				BackdropComponent={Backdrop}
				BackdropProps={{
					timeout: 500,
				}}
			>
				<Fade in={respModalOpen}>
					<div className="demoresult-popup-sec">
						<div className="demoresultpopup-titlesec">
							<h4>
								{successMsg !== "" ? (
									<p color="green">{successMsg}</p>
								) : (
									<p color="red">{errMsg}</p>
								)}
								Our Team with in touch shortly.Thank you !!!
							</h4>
							
						</div>
						<div className="align-center">
							<Button
								variant="contained"
								color="primary"
								className="cancel-demo-btn"
								component="span"
								onClick={handleCloseRespModal}
							>
								Close
							</Button>
						</div>
					</div>
				</Fade>
			</Modal> */}
			<Modal
				aria-labelledby="transition-modal-title"
				aria-describedby="transition-modal-description"
				className="roadblock-popup"
				open={respModalOpen}
				onClose={handleCloseRespModal}
				closeAfterTransition
				BackdropComponent={Backdrop}
				BackdropProps={{
					timeout: 500,
				}}
			>
				<Fade in={respModalOpen}>
					<div className="demoresult-popup-sec demoresult-success p-0">
						<div className="exclamation text-center">
							<img src={SuccessImg} alt="great" className="exclamationImg" />
						</div>
						<h1 class="text-center">Successful!</h1>
						<div className="demoresultpopup-titlesec text-center">
							
							<p>YAY!!! Your request to add seller has been sent successfully to <b className="bolder">{getSellerInfoResult.payload.c_seller_name}</b> Distributors, 
								someone from <b className="bolder"> {getSellerInfoResult.payload.c_seller_name}</b>  Distributors will contact you shortly.</p>
						</div>
						<div className="align-center">
							<Button
								variant="contained"
								color="primary"
								className="cancel-demo-btn"
								component="span"
								onClick={handleCloseRespModal}
							>
								Close
							</Button>
						</div>
					</div>
				</Fade>
			</Modal>
		</div>
	)
}

export default AddSellerModal